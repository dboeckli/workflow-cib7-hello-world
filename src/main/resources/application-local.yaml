server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: workflow-hello-world

  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true

  jpa:
    defer-datasource-initialization: true
  datasource:
    hikari:
      jdbc-url: jdbc:h2:mem:workflow-hello-world

  docker:
    compose:
      enabled: true
      stop:
        command: down
      skip:
        in-tests: false

  ldap:
    url: ldap://localhost:389
    base-dn: dc=example,dc=ch
    manager-dn: cn=admin,dc=example,dc=ch
    manager-password: password

camunda:
  bpm:
    authorization:
      enabled: true
    run:
      ldap:
        enabled: true # Switch to enable the LDAP identity service plugin
      admin-auth:
        enabled: true # Switch to enable the Administrator Authorization plugin
      auth:
        enabled: true # Switch to enable authentication for requests to the REST API
        # composite requires cibseven-webclient.properties
        authentication: composite # Authentication method, currently only basic and composite is supported
    admin-user:
      id: camunda-admin
    filter:
      create: All Tasks
    client:
      base-url: http://localhost:8080/engine-rest
      worker-id: spring-boot-worker
      basic-auth:
        username: camunda-admin
        password: camunda-admin-password
    metrics:
      enabled: true
      db-reporter-activate: true
    generic-properties:
      ignore-unknown-fields: false
      properties:
        javaSerializationFormatEnabled: true
        historyTimeToLive: 5
        enableExceptionsAfterUnhandledBpmnError: true

# https://github.com/cibseven/cibseven-webclient
# https://docs.cibseven.org/manual/latest/user-guide/cibseven-run/#choose-between-default-and-production-configuration
# https://docs.cibseven.org/get-started/spring-boot/configuration/
cibseven:
  webclient:
    services:
      basePath: /webapp/services/v1
    # Engine rest
    engineRest:
      url: http://localhost:8080
    user:
      provider: org.cibseven.webapp.auth.LdapUserProvider
    ldap:
      url: ldap://localhost:389
      user: cn=admin,dc=example,dc=ch
      password: password
      folder: dc=example,dc=ch # BASE DN
      userNameAttribute: uid
      userDisplayNameAttribute: cn
      followReferrals: follow

camunda-ldap-plugin:
  url: ldap://localhost:389
  sslEnabled: false
  user: cn=admin,dc=example,dc=ch
  password: password
  base-dn: dc=example,dc=ch
  users:
    user-search-base: "ou=users"
    user-search-filter: "(objectClass=inetOrgPerson)"
    user-id-attribute: uid
    user-firstname-attribute: givenName
    user-lastname-attribute: sn
    user-email-attribute: mail
    user-password-attribute: userPassword
  groups:
    group-search-base: "ou=groups"
    group-search-filter: "(objectClass=groupOfNames)"
    group-id-attribute: cn
    group-name-attribute: cn
    group-member-attribute: member

camunda-authorization-plugin:
  admin-group: "camunda-admins"
  admin-user: "camunda-admin"

management:
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
    camunda:
      enabled: true
  endpoints:
    # we need this deprecated config because the cibseven-webclient-web dependency comes with its own application.yaml
    # we need to overwrite it this way.
    # see: https://github.com/cibseven/cibseven-webclient/blob/main/cibseven-webclient-web/src/main/resources/application.yaml
    enabled-by-default: true
    web:
      exposure:
        include: "*"
    #access:
      #default: unrestricted
  endpoint:
    configprops:
      # WARNING: SECURITY RISK - DO NOT USE IN PRODUCTION ENVIRONMENT
      # This configuration exposes sensitive data and should only be used for development or testing purposes.
      # Ensure this is disabled in any environment where security is a concern.
      show-values: ALWAYS
    health:
      probes:
        enabled: true
      show-details: always

springdoc:
  show-actuator: true
  api-docs:
    path: /swagger/v3/api-docs
    groups:
      enabled: true
  swagger-ui:
    show-extensions: true

logging:
  level:
    org.zalando.logbook: INFO
    org.springframework.ldap: DEBUG

logbook:
  filter:
    enabled: true
  format:
    style: http
  obfuscate:
    headers:
      - Authorization
      - X-Secret
    parameters:
      - access_token
      - password
  predicate:
    exclude:
      # Exclude HTML-related calls and specific endpoints that Logbook doesn't handle correctly
      - path: /actuator/health/**

      - path: /h2-console/**

      - path: /swagger/**
      - path: /swagger-ui/**

      - path: /favicon.ico

      - path: /webapp
      - path: /webapp/**

      - path: /webjars/**

      - path: /restapi/camunda
      # Add more exclusions as needed

application:
  apifirst-server-jpa:
    protocol: "http"
    host: "localhost"
    port: "8082"
    context: "/"